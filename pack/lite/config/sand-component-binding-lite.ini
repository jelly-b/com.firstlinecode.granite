stream.service$client.message.receivers=socket.message.receiver, device.socket.message.receiver

socket.message.receiver$session.manager=lite.session.manager
socket.message.receiver$message.processor=ibr.supported.client.message.processor
socket.message.receiver$router=lite.router
socket.message.receiver$local.node.id.provider=lite.local.node.id.provider

ibr.supported.client.message.processor$authenticator=lite.authenticator
ibr.supported.client.message.processor$session.manager=lite.session.manager
ibr.supported.client.message.processor$message.channel=lite.stream.2.parsing.message.channel
ibr.supported.client.message.processor$event.message.channel=lite.any.2.event.message.channel
ibr.supported.client.message.processor$router=lite.router
ibr.supported.client.message.processor$registrar=default.registrar
default.registrar$account.manager=lite.account.manager
default.registrar$registration.strategy=lite.registration.strategy

device.socket.message.receiver$session.manager=lite.session.manager
device.socket.message.receiver$message.processor=ibdr.supported.client.message.processor
device.socket.message.receiver$router=lite.router
device.socket.message.receiver$local.node.id.provider=lite.local.node.id.provider

ibdr.supported.client.message.processor$authenticator=lite.device.authenticator
ibdr.supported.client.message.processor$session.manager=lite.session.manager
ibdr.supported.client.message.processor$message.channel=lite.stream.2.parsing.message.channel
ibdr.supported.client.message.processor$event.message.channel=lite.any.2.event.message.channel
ibdr.supported.client.message.processor$router=lite.router
ibdr.supported.client.message.processor$registrar=lite.device.registrar
ibdr.supported.client.message.processor$registration.customizer.proxy=device.registration.customizer.proxy
default.device.registrar$device.manager=lite.device.manager

parsing.service$stream.message.receiver=lite.stream.2.parsing.message.receiver
lite.stream.2.parsing.message.receiver$session.manager=lite.session.manager
lite.stream.2.parsing.message.receiver$message.channel=lite.parsing.2.processing.message.channel
lite.stream.2.parsing.message.receiver$message.processor=default.message.parsing.processor

processing.service$parsing.message.receiver=lite.parsing.2.processing.message.receiver
lite.parsing.2.processing.message.receiver$session.manager=lite.session.manager
lite.parsing.2.processing.message.receiver$message.channel=lite.any.2.routing.message.channel
lite.parsing.2.processing.message.receiver$message.processor=default.protocol.processing.processor
default.protocol.processing.processor$event.message.channel=lite.any.2.event.message.channel
default.protocol.processing.processor$authenticator=lite.authenticator
default.protocol.processing.processor$presence.processor=default.presence.processor
default.presence.processor$event.message.channel=lite.any.2.event.message.channel
default.protocol.processing.processor$message.processor=default.message.processor
default.message.processor$event.message.channel=lite.any.2.event.message.channel
default.protocol.processing.processor$iq.result.processor=default.iq.result.processor
default.iq.result.processor$event.message.channel=lite.any.2.event.message.channel

event.service$event.message.receiver=lite.any.2.event.message.receiver
lite.any.2.event.message.receiver$message.processor=default.event.processor
lite.any.2.event.message.receiver$message.channel=lite.any.2.routing.message.channel
lite.any.2.event.message.receiver$session.manager=lite.session.manager

routing.service$any.message.receiver=lite.any.2.routing.message.receiver
lite.any.2.routing.message.receiver$session.manager=lite.session.manager
lite.any.2.routing.message.receiver$message.channel=lite.routing.2.stream.message.channel
lite.any.2.routing.message.receiver$message.processor=default.routing.processor

stream.service$delivery.message.receiver=lite.routing.2.stream.message.receiver
lite.routing.2.stream.message.receiver$session.manager=lite.session.manager
lite.routing.2.stream.message.receiver$message.processor=default.delivery.message.processor

#component.stream.service$message.acceptors=default.component.message.acceptor
#component.stream.service$component.connections.register=lite.component.connections.register
#default.component.message.acceptor$message.processor=component.accept.message.processor
#component.accept.message.processor$message.channel=lite.component.stream.2.parsing.message.channel

#component.parsing.service$stream.message.receiver=lite.component.stream.2.parsing.message.receiver
#lite.component.stream.2.parsing.message.receiver$message.channel=lite.component.parsing.2.processing.message.channel
#lite.component.stream.2.parsing.message.receiver$message.processor=default.component.message.parsing.processor

#component.processing.service$parsing.message.receiver=lite.component.parsing.2.processing.message.receiver
#component.processing.service$resource.service=
#lite.component.parsing.2.processing.message.receiver$message.channel=lite.component.processing.2.routing.message.channel
#lite.component.parsing.2.processing.message.receiver$message.processor=default.component.protocol.processing.processor

#component.routing.service$processing.message.receiver=lite.component.processing.2.routing.message.receiver
#lite.component.processing.2.routing.message.receiver$message.channel=lite.component.routing.2.stream.message.channel
#lite.component.processing.2.routing.message.receiver$message.processor=default.component.routing.processor

#component.stream.service$delivery.message.receiver=lite.component.routing.2.stream.message.receiver
#delivery.message.receiver$message.processor=default.component.delivery.message.processor
